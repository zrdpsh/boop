Методы я добавил сразу, ещё в первом задании.
Не использовал список, чтобы




Классы и логику подгонял под действия в примере
- дворфы сражаются за альпак, поэтому нужен класс альпака с единственным значимым параметром - пострижена или нет. 
Количество шерсти от каждой стрижки решил сделать одинаковым, поэтому у альпак этого параметра нет, 
а само это количество прописано в классе Dwarf, в методе стрижка. Можно вернуть его альпаке, сделать отдельным параметром (например, потому,
что альпаки бывают более или менее волосатые или вообще потому, что все они разные) и прописывать это количество шерсти при создании объекта класса.
- молот имеет единственный параметр (урон), поэтому нужны поля
- У дворфа получилось три базовых параметра - имя, количество "здоровья" и количество мотков шерсти. 
- юнит должен уметь атаковать/получать урон и накапливать/терять шерсть после стрижки альпак/поражения от другого игрока.

Не сразу вспомнил, что к свойствам класса можно обращаться напрямую, через точку, поэтому сразу писал геттеры и сеттеры для каждого свойства,
и поэтому класс Дворф получился такой большой.

Вообще, получается, что каждому числовому свойству логично сопоставить как минимум три метода - увеличить, уменьшить и напечатать/вернуть значение.