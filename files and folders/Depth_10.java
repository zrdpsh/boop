import java.io.File;
import java.util.ArrayList;
import java.util.Arrays;

public class Depth_10
{
   public static void main(String[] args)
   {
      File root = new File(".");
     /* инициализировать файл с именем "." - верхняя папка в иерархии */
     
      ArrayList<File> expand = new ArrayList<File>();
     /* объявить список ArrayList, который называется expand - в него можно записать произвольное количество File" */
     
      expand.add(root);
     /* добавить в ArrayList File, созданный в первой строчке */
     
      for(int depth = 0; depth < 10; depth++) {
     /* запустить цикл на 10 повторений - число равно нужной глубине вложенности */
        
        File[] expandCopy = expand.toArray(new File[expand.size()]);
     /* переписываем данные из списка expand в массив expandCopy
      * В качестве аргумента нужно передать инциализированный массив нужной длины. Длину из expand извлекаем с помощью .size()
      * В результате получится массив ссылок на объекты типа File, в который записаны все названия папок на текущем уровне*/
        
        expand.clear();
      /* освободить первоначальный список для новых названий папок. старые - из предыдущего уровня - остаются в только что созданной копии */
          for (File file : expandCopy) {
      /* запустить цикл, в котором перебираем все названия файлов*/
            System.out.println(depth + " " + file);
      /* напечатать в консоль пару "уровень вложенности - название файла" - собственно, итог работы функции*/
            if (file.isDirectory()) {
      /* проверить, является ли файл из полученного списка папкой - так мы получаем список файлов следующего уровня вложенности... */
              expand.addAll(Arrays.asList(file.listFiles()));
      /* .. если является - получаем файлы, лежащие внутри file c помощью .listFiles() в виде массива с объектами File ->
      *   -> Arrays.asList превращает наш массив файлов в список
      *   добавляем названия файлов в expand, освобождённый перед началом работы цикла*/
            }
      /* на самой первой итерации папка будет всего одна - "." */
          }
      }
   }
} //main class
